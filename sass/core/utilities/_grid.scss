/// FUNCTIONS
@function container-width($size) {
  @return map-get($grid, $size);
}

@function container-padding($size) {
  @return calc(50% - #{container-width($size) / 2 - $grid-gap});
}

@function column-width($number, $size: null) {
  @if $size {
    @return ($number / 12) * container-width($size);
  } @else {
    @return percentage($number / 12);
  }
}

/// MIXINS
@mixin retina() {
  @media (min-resolution: 2dppx), (min-resolution: 192dpi) {
    @content;
  }
}

@mixin min-width($size) {
  @media (min-width: container-width($size)) {
    @content;
  }
}

@mixin max-width($size) {
  @media (max-width: container-width($size) - 1px) {
    @content;
  }
}

@mixin container() {
  padding-left: $grid-gap;
  padding-right: $grid-gap;

  @each $size, $width in $grid {
    @include min-width($size) {
      padding-left: container-padding($size);
      padding-right: container-padding($size);
    }
  }
}

@mixin columns() {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$grid-gap;
  margin-right: -$grid-gap;
}

@mixin column($number, $size: null) {
  flex: 0 0 column-width($number, $size);
  max-width: column-width($number, $size);
  padding-left: $grid-gap;
  padding-right: $grid-gap;
}
